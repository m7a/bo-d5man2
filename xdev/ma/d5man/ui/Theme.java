package ma.d5man.ui;

import jexer.bits.ColorTheme;

class Theme {

	private static final String[][] KV = new String[][] {
		{ "tbutton.active", "black on red" },
		{ "tbutton.disabled", "bold black on white" },
		{ "tbutton.inactive", "black on white" },
		{ "tbutton.mnemonic", "red on white" },
		{ "tbutton.mnemonic.highlighted", "black on red" },
		{ "tcalendar.arrow", "red on black" },
		{ "tcalendar.background", "white on black" },
		{ "tcalendar.day", "white on black" },
		{ "tcalendar.day.selected", "black on white" },
		{ "tcalendar.title", "bold white on black" },
		{ "tcheckbox.active", "white on black" },
		{ "tcheckbox.inactive", "bold black on black" },
		{ "tcheckbox.mnemonic", "red on black" },
		{ "tcheckbox.mnemonic.highlighted", "bold red on black" },
		{ "tcombobox.active", "white on black" },
		{ "tcombobox.inactive", "bold black on black" },
		{ "tdesktop.background", "white on black" },
		{ "teditor", "white on black" },
		{ "teditor.selected", "black on white" },
		{ "tfield.active", "red on black" },
		{ "tfield.inactive", "white on black" },
		{ "tlabel", "white on black" },
		{ "tlabel.mnemonic", "red on black" },
		{ "tlist", "white on black" },
		{ "tlist.inactive", "white on black" },
		{ "tlist.selected", "black on red" },
		{ "tlist.selected.inactive", "black on white" },
		{ "tlist.unreadable", "black on white" },
		{ "tmenu", "white on black" },
		{ "tmenu.disabled", "white on black" },
		{ "tmenu.highlighted", "black on white" },
		{ "tmenu.mnemonic", "red on black" },
		{ "tmenu.mnemonic.highlighted", "red on white" },
		{ "tprogressbar.complete", "red on black" },
		{ "tprogressbar.incomplete", "bold black on black" },
		{ "tradiobutton.active", "white on black" },
		{ "tradiobutton.inactive", "bold black on black" },
		{ "tradiobutton.mnemonic", "red on black" },
		{ "tradiobutton.mnemonic.highlighted", "bold red on black" },
		{ "tradiogroup.active", "white on black" },
		{ "tradiogroup.inactive", "white on black" },
		{ "tscroller.arrows", "white on black" },
		{ "tscroller.bar", "white on black" },
		{ "tspinner.active", "red on black" },
		{ "tspinner.inactive", "white on black" },
		{ "tsplitpane", "red on black" },
		{ "tstatusbar.button", "red on black" },
		{ "tstatusbar.selected", "black on white" },
		{ "tstatusbar.text", "white on black" },
		{ "ttable.active", "black on white" },
		{ "ttable.border", "red on black" },
		{ "ttable.inactive", "white on black" },
		{ "ttable.label", "white on black" },
		{ "ttable.label.selected", "black on white" },
		{ "ttable.selected", "black on white" },
		{ "ttext", "white on black" },
		{ "ttreeview", "white on black" },
		{ "ttreeview.expandbutton", "white on black" },
		{ "ttreeview.inactive", "white on black" },
		{ "ttreeview.selected", "black on red" },
		{ "ttreeview.selected.inactive", "black on white" },
		{ "ttreeview.unreadable", "white on black" },
		{ "twindow.background", "white on black" },
		{ "twindow.background.inactive", "white on black" },
		{ "twindow.background.modal", "white on black" },
		{ "twindow.background.modal.inactive", "white on black" },
		{ "twindow.background.windowmove", "red on black" },
		{ "twindow.border", "red on black" },
		{ "twindow.border.inactive", "white on black" },
		{ "twindow.border.modal", "white on black" },
		{ "twindow.border.modal.inactive", "red on black" },
		{ "twindow.border.modal.windowmove", "red on black" },
		{ "twindow.border.windowmove", "red on black" },
	};

	static void set(ColorTheme jexer) {
		for(String[] line: KV)
			jexer.setColorFromString(line[0], line[1]);
	}
}
